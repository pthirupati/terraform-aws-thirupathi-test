pipeline {
    agent any

    environment {
        AWS_CREDENTIALS = credentials('aws_secret_and_access') // Jenkins credentials ID for AWS
        TF_IN_AUTOMATION = 'true' // Specifies that Terraform runs in automation mode
    }

    parameters {
        string(name: 'TERRAFORM_DIR', description: 'Specify the Terraform directory to run operations in (e.g., ec2, iam, vpc, eip)')
    }

    stages {
        stage('Start Notification') {
            steps {
                script {
                    emailext(
                        subject: "Terraform Pipeline Started - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                        body: """
                        Pipeline started for job: ${env.JOB_NAME} #${env.BUILD_NUMBER}
                        Terraform Directory: ${params.TERRAFORM_DIR}
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        to: 'awslearning85@gmail.com'
                    )
                }
            }
        }

        stage('Checkout') {
            steps {
                script {
                    def terraformDir = params.TERRAFORM_DIR
                    if (!terraformDir) {
                        error "TERRAFORM_DIR parameter is required."
                    }
                }
                git branch: 'main', url: 'https://github.com/pthirupati/terraform-aws-thirupathi-test.git'
            }
        }

        stage('Setup Terraform Backend') {
            steps {
                script {
                    def terraformDir = params.TERRAFORM_DIR
                    if (!terraformDir) {
                        error "TERRAFORM_DIR parameter is required."
                    }

                    // Generate backend.tf with dynamic state path based on TERRAFORM_DIR parameter
                    writeFile file: "${terraformDir}/backend.tf", text: """
terraform {
  backend "s3" {
    bucket         = "terraform-aws-thirupathi-test"
    key            = "${terraformDir}/state/terraform.tfstate"
    region         = "ap-south-1"
    encrypt        = true
  }
}
"""
                }
            }
        }

        stage('Setup Terraform') {
            steps {
                script {
                    dir("${params.TERRAFORM_DIR}") {
                        sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_CREDENTIALS_USR}
                        export AWS_SECRET_ACCESS_KEY=${AWS_CREDENTIALS_PSW}
                        terraform init
                        '''
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    dir("${params.TERRAFORM_DIR}") {
                        sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_CREDENTIALS_USR}
                        export AWS_SECRET_ACCESS_KEY=${AWS_CREDENTIALS_PSW}
                        terraform plan -out=tfplan
                        '''
                    }
                }
            }
        }

        stage('Approval') {
            steps {
                script {
                    emailext(
                        subject: "Approval Required - Terraform Pipeline ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                        body: """
                        The Terraform pipeline is waiting for approval.
                        Terraform Directory: ${params.TERRAFORM_DIR}
                        State file: s3://terraform-aws-thirupathi-test/${params.TERRAFORM_DIR}/state/terraform.tfstate
                        """,
                        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                        to: 'awslearning85@gmail.com'
                    )
                }
                input message: 'Do you want to proceed with Terraform Apply?', ok: 'Proceed'
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    dir("${params.TERRAFORM_DIR}") {
                        sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_CREDENTIALS_USR}
                        export AWS_SECRET_ACCESS_KEY=${AWS_CREDENTIALS_PSW}
                        terraform apply -auto-approve tfplan
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                emailext(
                    subject: "Pipeline Succeeded - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """
                    The Terraform pipeline has successfully completed.
                    Terraform Directory: ${params.TERRAFORM_DIR}
                    State file: s3://terraform-aws-thirupathi-test/${params.TERRAFORM_DIR}/state/terraform.tfstate
                    """,
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: 'awslearning85@gmail.com'
                )
            }
            echo 'Pipeline succeeded!'
        }

        failure {
            script {
                emailext(
                    subject: "Pipeline Failed - ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                    body: """
                    The Terraform pipeline has failed.
                    Terraform Directory: ${params.TERRAFORM_DIR}
                    Error: ${currentBuild.rawBuild.log(50).join('\n')}
                    State file: s3://terraform-aws-thirupathi-test/${params.TERRAFORM_DIR}/state/terraform.tfstate
                    """,
                    recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                    to: 'awslearning85@gmail.com'
                )
            }
            echo 'Pipeline failed.'
        }

        always {
            cleanWs()
        }
    }
}
